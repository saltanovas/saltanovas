<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 480 85">
    <foreignObject width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" class="container">
            <style>
                    a {
                        text-decoration: none;
                    }

                    div {
                        font-size: 1em;
                        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,
                            sans-serif, Apple Color Emoji, Segoe UI Emoji;
                    }

                    /* Layout Utilities */
                    .d-flex {
                        display: flex;
                    }

                    .flex-column {
                        flex-direction: column;
                    }

                    .align-items-center {
                        align-items: center;
                    }

                    .justify-content-center {
                        justify-content: center;
                    }

                    .mr-3 {
                        margin-right: 1rem;
                    }

                    .text-muted-light {
                        color: #6c757d;
                    }

                    .text-muted-dark {
                        color: #adb5bd;
                    }

                    .text-dark {
                        color: #212529;
                    }

                    .text-white {
                        color: #ffffff;
                    }

                    .text-decoration-none {
                        text-decoration: none;
                    }

                    .fw-semibold {
                        font-weight: 600;
                    }

                    .img-fluid {
                        max-width: 100%;
                        height: auto;
                    }

                    .rounded {
                        border-radius: 0.25rem;
                    }

                    /* Custom */
                    .container {
                        width: 100%;
                        display: flex;
                        justify-content: center;
                        /* Required for compatibility with iOS */
                        transform: translateZ(0);
                        -webkit-transform: translateZ(0);
                    }

                    .cover {
                        width: 85px;
                        height: 85px;
                    }

                    #bars {
                        display: flex;
                        justify-content: space-around;
                        align-items: flex-end;
                        min-height: 47px;
                        gap: 2px;
                    }

                    .bar {
                        width: 3px;
                        height: 15px;
                        animation: pulse 0.9s ease-in-out infinite alternate;
                        border-radius: 3px;
                        transform-origin: bottom;
                        -webkit-transform-origin: bottom;

                        /* Start with the scaled-down state */
                        transform: translateZ(0) scaleY(0.2);
                        -webkit-transform: translateZ(0) scaleY(0.2);
                    }

                    .ellipsis {
                        overflow: hidden;
                        text-overflow: ellipsis;
                        white-space: nowrap;
                        max-width: 300px;
                        display: block;
                    }

                    @keyframes gradient {
                        0% {
                            background-position: 0% 50%;
                        }
                        50% {
                            background-position: 100% 50%;
                        }
                        100% {
                            background-position: 0% 50%;
                        }
                    }

                    @keyframes pulse {
                        0% {
                            transform: translateZ(0) scaleY(0.2);
                            opacity: .35;
                        }
                        100% {
                            transform: translateZ(0) scaleY(1);
                            opacity: 0.95;
                        }
                    }

                    {{ barCSS|safe }}
            </style>
            <div class="d-flex align-items-center ml-3">
                <!-- Cover Image -->
                <div class="mr-3 d-flex align-items-center">
                    <a href="{{ songURI }}" style="line-height: 0;">
                        <img src="data:image/png;base64,{{ image }}" class="cover img-fluid rounded"></img>
                    </a>
                </div>
                <!-- Song Info -->
                <div class="d-flex flex-column justify-content-center align-items-center">
                    <a href="{{ songURI }}" class="text-decoration-none">
                        <div class="fw-semibold {{ 'text-white' if theme == 'dark' else 'text-dark' }} ellipsis">{{ songName }}</div>
                    </a>
                    <a href="{{ artistURI }}" class="text-decoration-none">
                        <div class="{{ 'text-muted-dark' if theme == 'dark' else 'text-muted-light' }} ellipsis">{{ artistName }}</div>
                    </a>
                    {%- set totalBars = 60 -%}
                    <div id="bars">
                        {%- for i in range(totalBars) %}
                            <div class="bar" style="animation-delay: {{ loop.index0 * 25 }}ms;
                                    background: linear-gradient(90deg, rgb({{ barPalette[0][0] }}, {{ barPalette[0][1] }}, {{ barPalette[0][2] }}), rgb({{ barPalette[1][0] }}, {{ barPalette[1][1] }}, {{ barPalette[1][2] }}), rgb({{ barPalette[2][0] }}, {{ barPalette[2][1] }}, {{ barPalette[2][2] }}), rgb({{ barPalette[3][0] }}, {{ barPalette[3][1] }}, {{ barPalette[3][2] }}) );
                                    background-size: {{ totalBars * 100 }}% 100%;
                                    background-position: {{ (loop.index0 / totalBars) * 100 }}% 0;">
                            </div>
                        {%- endfor %}
                    </div>
                </div>
            </div>
        </div>
    </foreignObject>
</svg>
